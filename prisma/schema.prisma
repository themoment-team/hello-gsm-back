generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  user_idx         BigInt       @id
  userImg         String?      @db.VarChar(500) @map("user_img")
  name             String?      @db.VarChar(20)
  birth            DateTime?    @db.Date
  gender           String?      @db.VarChar(20)
  cellphoneNumber String?      @db.VarChar(20) @map("cellphone_number")
  application      application?
}

model access_token_blacklist {
  user_idx     BigInt
  access_token String   @db.VarChar(500)
  expired_date DateTime @default(dbgenerated("(current_timestamp() + interval 5 minute)")) @db.Timestamp(0)

  @@id([user_idx, access_token])
}

model application {
  applicationIdx           Int                  @id @default(autoincrement()) @map("application_idx")
  registrationNumber       Int?                 @unique(map: "application_registration_number_uindex") @db.SmallInt @map("registration_number")
  isFinalSubmission       Boolean?  @map("is_final_submission")
  isDocumentReception     Boolean? @map("is_document_reception")
  firstResultScreening    String?              @db.VarChar(20) @map("first_result_screening")
  finalResultScreening    String?              @db.VarChar(20) @map("final_result_screening")
  guardianCellphoneNumber String               @db.VarChar(20) @map("guardian_cellphone_number")
  teacher_cellphoneNumber  String               @db.VarChar(20)
  schoolName               String               @db.VarChar(50) @map("school-name")
  screening                 String               @db.VarChar(20)
  user_idx                  BigInt               @unique(map: "application_user_user_idx_fk")
  user                      user                 @relation(fields: [user_idx], references: [user_idx], onDelete: Cascade, onUpdate: Restrict, map: "application_user_user_idx_fk")
  application_details       application_details?
  application_score         application_score?
}

model application_details {
  applicationIdx         Int         @id @map("application_idx")
  idPhotoUrl            String      @db.VarChar(500) @map("ID_photo_url")
  address                 String      @db.VarChar(50)
  addressDetails         String?      @db.VarChar(50) @map("address_details")
  telephoneNumber        String      @db.VarChar(20) @map("telephone_number")
  guardianName           String      @db.VarChar(20) @map("guardian_name")
  guardianRelation       String      @db.VarChar(20) @map("guardian_relation")
  teacherName            String      @db.VarChar(20) @map("teacher_name")
  schoolLocation         String      @db.VarChar(50) @map("school_location")
  educationStatus        String      @db.VarChar(20) @map("education_status")
  graduationYear         String      @db.VarChar(20) @map("graduation_year")
  graduationMonth        String      @db.VarChar(20) @map("graduation_month")
  schoolTelephoneNumber String      @db.VarChar(20) @map("school_telephone_number")
  firstWantedMajor      String      @db.VarChar(20) @map("first_wanted_major")
  secondWantedMajor     String      @db.VarChar(20) @map("second_wanted_major")
  thirdWantedMajor      String      @db.VarChar(20) @map("third_wanted_major")
  majorResult            String?     @db.VarChar(20) @map("major_result")
  application             application @relation(fields: [applicationIdx], references: [applicationIdx], onDelete: Cascade, onUpdate: Restrict, map: "application_details_application_application_idx_fk")
}

model refresh_token {
  user_idx      BigInt @id
  refresh_token String @db.VarChar(500)
}

model admin {
  admin_idx Int    @id @default(autoincrement())
  id        String @db.VarChar(50)
  password  String @db.VarChar(50)
}

model application_score {
  applicationIdx                   Int         @id @map("application_idx")
  score_1_1                         Int         @db.SmallInt @map("score1_1")
  score_1_2                         Int         @db.SmallInt @map("score1_2")
  score_2_1                         Int         @db.SmallInt @map("score2_1")
  score_2_2                         Int         @db.SmallInt @map("score2_2")
  score_3_1                         Int         @db.SmallInt @map("score3_1")
  generalCurriculumScoreSubtotal Int         @db.SmallInt @map("general_curriculum_score_subtotal")
  artSportsScore                  Int         @db.SmallInt @map("art_sports_score")
  curriculumScoreSubtotal         Int         @db.SmallInt @map("curriculum_score_subtotal")
  attendanceScore                  Int         @db.SmallInt @map("attendance_score")
  volunteerScore                   Int         @db.SmallInt @map("volunteer_score")
  nonCurriculumScoreSubtotal     Int         @db.SmallInt @map("non_curriculum_score_subtotal")
  scoreTotal                       Int         @db.SmallInt @map("score_total")
  application                       application @relation(fields: [applicationIdx], references: [applicationIdx], onDelete: Cascade, onUpdate: Restrict, map: "application_score_application_application_idx_fk")
}
